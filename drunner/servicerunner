#!/bin/bash
set -o nounset
MYDIR=$( dirname "$(readlink -f "$0")" )

# read the utilities autogenerated by dRunner for us (it makes them when we're installed).
# defines functions die and isHook, amongst others.
source "$MYDIR/utils.sh"

#------------------------------------------------------------------------------------
# showhelp - give some info about the service. SERVICENAME and IMAGENAME are provided by variables.sh.

function showhelp {
cat <<EOF >&2

NAME
   ${SERVICENAME} - Auto maps virtual hosts to ports.

SYNOPSIS
   ${SERVICENAME} help  - This help
   ${SERVICENAME} start - Start nginx
   ${SERVICENAME} stop  - Stop it

EOF
}

# function confignetwork {
#    echo "Configuring network autoproxy."
#    docker network create --driver bridge autoproxy
# }
#
# function testnetwork {
#    docker network ls | grep -q autoproxy || confignetwork
#    docker network ls | grep -q autoproxy || die "Failed to configure network"
# }

#------------------------------------------------------------------------------------
# The main function. We can add any commands we'd like here!

function main {
   [ "$#" -gt 0 ] || die "servicerunner must have arguments."

   COMMAND="${1}" ; shift

   PROXYCONTAINERNAME="drunner-${SERVICENAME}-proxy"

   case "$COMMAND" in
         help)
            showhelp
            ;;

         install_end)
            #testnetwork
            ;;

         # testnet)
         #    testnetwork
         #    ;;

         enter)
            docker exec -it ${PROXYCONTAINERNAME} /bin/bash
            ;;

         start)
            docker run -d -p 80:80 \
               --name ${PROXYCONTAINERNAME} \
               -v /var/run/docker.sock:/tmp/docker.sock:ro \
               jwilder/nginx-proxy

            #--net autoproxy \
            ;;

         stop)
            docker stop ${PROXYCONTAINERNAME}
            docker rm ${PROXYCONTAINERNAME}
            ;;

         selftest)
            ;;

         *)
            # For the standard hooks we don't implement we're required to produce
            # no output and set exit code 127 (E_NOTIMPL).
            ! isHook "${COMMAND}" || exit 127

            # for all other commands we show the help.
            showhelp
            die "Unrecognised command ${CODE_S}${COMMAND}${CODE_E}"
            ;;
   esac
}

#------------------------------------------------------------------------------------

main "$@"
exit $?
